

# This file was *autogenerated* from the file solve.sage
from sage.all_cmdline import *   # import sage library

_sage_const_1 = Integer(1); _sage_const_1094526398891 = Integer(1094526398891); _sage_const_1344204355 = Integer(1344204355); _sage_const_2 = Integer(2); _sage_const_2293708968 = Integer(2293708968); _sage_const_2874229898 = Integer(2874229898); _sage_const_310040297343 = Integer(310040297343); _sage_const_0 = Integer(0); _sage_const_1337 = Integer(1337)
from Crypto.Util.number import long_to_bytes

with open('output.txt') as f:
    e = eval(f.readline().split(' = ')[_sage_const_1 ])
    c = eval(f.readline().split(' = ')[_sage_const_1 ])

R = PolynomialRing(GF(_sage_const_1094526398891 ), names=('x',)); (x,) = R._first_ngens(1)

F = _sage_const_1344204355 *x**_sage_const_2  + _sage_const_2293708968 *x + _sage_const_2874229898  - _sage_const_310040297343 

p = int(F.roots()[_sage_const_0 ][_sage_const_0 ])

n = p**_sage_const_1337 
phi = euler_phi(n)
d = power_mod(e, -_sage_const_1 , phi)
m = power_mod(c, d, n)
print(long_to_bytes(m))

